version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: customs_broker_portal
      POSTGRES_USER: customs_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U customs_user -d customs_broker_portal"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - customs-network

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://customs_user:${POSTGRES_PASSWORD}@postgres:5432/customs_broker_portal
      - ENVIRONMENT=production
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - customs-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - customs-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  customs-network:
    driver: bridge
