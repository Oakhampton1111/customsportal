[tool:pytest]
# Pytest configuration for Customs Broker Portal Backend
# This file configures pytest for comprehensive testing with async support,
# coverage reporting, and proper test organization.

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async test support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test markers for categorizing tests
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test component interactions
    api: API endpoint tests that test HTTP routes and responses
    database: Tests that require database access
    slow: Tests that take longer to run (>1 second)
    external: Tests that require external services or network access
    auth: Tests related to authentication and authorization
    ai: Tests for AI integration features
    tariff: Tests for tariff-related functionality
    duty: Tests for duty calculation functionality
    search: Tests for search functionality

# Test output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --cov-branch
    --no-cov-on-fail

# Coverage configuration
[coverage:run]
source = .
omit = 
    tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    .venv/*
    setup.py
    conftest.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test environment configuration
env = 
    ENVIRONMENT = test
    DATABASE_URL = sqlite+aiosqlite:///:memory:
    SECRET_KEY = test-secret-key-for-testing-only
    ANTHROPIC_API_KEY = test-api-key
    LOG_LEVEL = WARNING

# Minimum Python version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Disable warnings for cleaner output
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning